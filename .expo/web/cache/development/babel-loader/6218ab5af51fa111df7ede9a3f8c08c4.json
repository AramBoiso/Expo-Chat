{"ast":null,"code":"import 'react-native-gesture-handler';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  _jsx(NavigationContainer, {});\n}","map":{"version":3,"sources":["C:/Users/Aram/Projects/Personal/ChatApp/chat/App.js"],"names":["React","App"],"mappings":"AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,eAAe,SAASC,GAAT,GAAc;AAC3B,OAAC,mBAAD;AAGD","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function App(){\n  <NavigationContainer>\n    \n  </NavigationContainer>\n}\n\n\n\n\n// import React, { useState, useCallback, useEffect } from \"react\";\n// import { \n//   SafeAreaView, \n//   StyleSheet, \n//   TextInput,\n//   Button,\n//   View,\n//   Text,\n//   FlatList,\n//   StatusBar\n// } from 'react-native';\n// import { GiftedChat } from 'react-native-gifted-chat';\n\n// // AsyncStorage\n\n// import io from \"socket.io-client\";\n// const API = 'http://192.168.56.1:3000';\n\n// const DATA = [\n//   {\n//     id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n//     title: 'Chat 1',\n//   },\n//   {\n//     id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n//     title: 'Chat 2',\n//   },\n//   {\n//     id: '58694a0f-3da1-471f-bd96-145571e29d72',\n//     title: 'Chat 2',\n//   },\n// ];\n\n// const Item = ({ title }) => (\n//   <View style={styles.item}>\n//     <Text style={styles.title}>{title}</Text>\n//   </View>\n// );\n\n\n// export default function App() {\n\n//   const [messages, setMessages] = useState([]);\n//   const [userId, setUserId] = React.useState();\n//   const [name, setName] = React.useState();\n//   const [ screen, setScreen ] = useState(0);\n//   const [hasConnection, setConnection] = useState(false);\n//   const [ chats, setChats ] = useState([]);\n\n//   useEffect( async () => {\n\n//     const socket = io(API, {\n//       transports: ['websocket'],\n//       jsonp: false\n//     });\n\n//     socket.io.on(\"open\", () => {\n//       setConnection(true);\n//       console.log(\"has connection? \", hasConnection);\n//     });\n//     socket.io.on(\"close\", () => setConnection(false));\n\n//     if(screen === 1){\n      \n//       socket.emit(\"requestChats\", {\n//         userId\n//       });\n\n//       socket.on(\"getChats\", (data) => {\n//         setChats( data.map( ({_id, users}) => ({ chatId: _id })));\n//         // console.log(\"CHATS ---> \", chats);\n//       });\n      \n\n//     }\n//         // console.log('screen -> ', screen);\n//     setMessages([\n//       {\n//         _id: 1,\n//         text: 'Hello developer',\n//         createAt: new Date(),\n//         user: {\n//           _id: 2,\n//           name: 'React Native',\n//           avatar: 'https://placeimg.com/140/140/any'\n//         },\n\n//       },\n\n//     ])\n\n//   }, []);\n\n//   const findUser = async () => {\n//     let { _id, username } = await (await fetch(`${API}/users/${name}`)).json();\n//     setUserId(_id);\n//     setScreen(1);\n//     // await AsyncStorage.setItem('userId', _id);\n//   }\n//   const renderItem = ({ item }) => <Item title={item.chatId} />;\n\n//   const onSend = useCallback((messages = []) => {\n//     setMessages( previousMessages => GiftedChat.append(previousMessages, messages))\n//   }, []);\n\n//   switch(screen){\n//     case 0: \n//       return(\n//         <>\n//          <GiftedChat\n//         messages={messages}\n//         onSend={messages => onSend(messages)}\n//         user={{\n//           _id:1\n//         }} ></GiftedChat>\n   \n//           {/* <View style={styles.container}>\n//             <TextInput style={styles.input} placeholder=\"Enter your name\" value={name} onChangeText={setName} />\n//             <Button \n//                 onPress={findUser} \n//                 title=\"Enter the chat\" />\n//           </View> */}\n//         </>\n//       );\n//     case 1: \n//         return(\n//           <View style={styles.container}>\n//             <SafeAreaView >\n//               <FlatList data={chats} renderItem={renderItem} keyExtractor={item => item.chatId} />\n//             </SafeAreaView>\n\n//             <Button \n//               onPress={()=>{}} \n//               title=\"New Chat\" />\n//           </View>\n//         );\n//   }\n \n\n//   return (\n//     <>\n\n//       {/* LIST OF CHATS */}\n\n      \n\n//       {/* CHAT */}\n     \n     \n//     </>\n    \n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     // alignItems: 'center',\n//     justifyContent: 'center',\n//     padding: 30,\n//   },\n//   listContainer:{\n//     flex: 1,\n//     marginTop: StatusBar.currentHeight || 0,\n//   },\n//   item: {\n//     backgroundColor: '#6495ed',\n//     padding: 10,\n//     marginVertical: 8,\n//     marginHorizontal: 16,\n//   },\n//   title: {\n//     color:'#f0f8ff',\n//     fontSize: 20,\n//   },\n//     input: {\n//       height: 50,\n//       width: '100%',\n//       borderWidth: 1,\n//       padding: 15,\n//       marginBottom: 20,\n//       borderColor: 'gray',\n//   },\n// });"]},"metadata":{},"sourceType":"module"}